{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-udemy\\\\src\\\\listar\\\\listar-tarefas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { A } from 'hookrouter';\nimport { Table } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport ItensListaTarefas from './itens-lista-tarefas';\nimport Paginacao from './paginacao';\n\nfunction ListarTarefas() {\n  _s();\n\n  const ITENS_POR_PAG = 3;\n  const [tarefas, setTarefas] = useState([]);\n  const [carregarTarefas, setCarregarTarefas] = useState(true);\n  const [totalItems, setTotalItems] = useState(0); //definir com 0 e deverá ser  atualizado no useEffect\n\n  const [paginaAtual, setPaginaAtual] = useState(1); //sempre a pagina atual vai ser 1\n\n  const [ordenarAsc, setOrdernarAsc] = useState(false);\n  const [ordenarDesc, setOrdernarDesc] = useState(false); //carregar assim que o componente for criado\n\n  useEffect(() => {\n    function obterTarefas() {\n      const tarefasDb = localStorage['tarefas'];\n      let listaTarefas = tarefasDb ? JSON.parse(tarefasDb) : [];\n      setTotalItems(listaTarefas.length); //começa na posicao array 0\n\n      setTarefas(listaTarefas.splice((paginaAtual - 1) * ITENS_POR_PAG, ITENS_POR_PAG)); //console.log('teste');\n      //console.log(listarTarefas);\n    } //se nao for carregado, carregue!!\n\n\n    if (carregarTarefas) {\n      obterTarefas();\n      setCarregarTarefas(false);\n    }\n  }, [carregarTarefas, paginaAtual]); //vai ficar escutando também o página atual\n  //seja chamado apenas qdo algum state trabalhe com ele, qdo esse\n  //estado seja alterado\n\n  function handleMudarPagina(pagina) {\n    setPaginaAtual(pagina);\n    setCarregarTarefas(true);\n  }\n\n  function handleOrdenar(event) {\n    ///sempre q clicar no link de tarefas, atualiza a ordenacao e chama o setCarregarTarefas\n    event.preventDefault(); //só utilizar o comportamento do click\n\n    if (!ordenarAsc && !ordenarDesc) {\n      setOrdernarAsc(true);\n      setOrdernarDesc(false);\n    } else if (ordenarAsc) {\n      setOrdernarAsc(false);\n      setOrdernarDesc(true);\n    } else {\n      setOrdernarAsc(false);\n      setOrdernarDesc(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tarefas a fazer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      \"data-testid\": \"tabela\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              onClick: handleOrdenar,\n              children: \"Tarefa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(A, {\n              href: \"/cadastrar\",\n              className: \"btn btn-success btn-sm\",\n              \"data-testid\": \"btn-nova-tarefa\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPlus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), \"\\xA0 Nova Tarefa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(ItensListaTarefas, {\n          tarefas: tarefas,\n          recarregarTarefas: setCarregarTarefas\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paginacao, {\n      totalItems: totalItems,\n      itemsPorPagina: ITENS_POR_PAG,\n      paginaAtual: paginaAtual,\n      mudarPagina: handleMudarPagina\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListarTarefas, \"JQTPcYm0XlVXM6V6zyANpcB7lec=\");\n\n_c = ListarTarefas;\nexport default ListarTarefas;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListarTarefas\");","map":{"version":3,"sources":["C:/xampp/htdocs/react-udemy/src/listar/listar-tarefas.js"],"names":["React","useState","useEffect","A","Table","FontAwesomeIcon","faPlus","ItensListaTarefas","Paginacao","ListarTarefas","ITENS_POR_PAG","tarefas","setTarefas","carregarTarefas","setCarregarTarefas","totalItems","setTotalItems","paginaAtual","setPaginaAtual","ordenarAsc","setOrdernarAsc","ordenarDesc","setOrdernarDesc","obterTarefas","tarefasDb","localStorage","listaTarefas","JSON","parse","length","splice","handleMudarPagina","pagina","handleOrdenar","event","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { A } from 'hookrouter';\r\nimport {Table} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport ItensListaTarefas from './itens-lista-tarefas';\r\nimport Paginacao from './paginacao';\r\n\r\n\r\nfunction ListarTarefas(){\r\n\r\n    const ITENS_POR_PAG = 3;\r\n\r\n\r\n    const [tarefas, setTarefas] = useState([]);\r\n    const [carregarTarefas, setCarregarTarefas] = useState(true);\r\n    const [totalItems, setTotalItems] = useState(0); //definir com 0 e deverá ser  atualizado no useEffect\r\n    const [paginaAtual, setPaginaAtual] = useState(1); //sempre a pagina atual vai ser 1\r\n    const [ordenarAsc, setOrdernarAsc] = useState(false);\r\n    const [ordenarDesc, setOrdernarDesc] = useState(false);\r\n\r\n    //carregar assim que o componente for criado\r\n    useEffect(()=> {\r\n        function obterTarefas(){\r\n            const tarefasDb = localStorage['tarefas'];\r\n            let listaTarefas = tarefasDb ? JSON.parse(tarefasDb) : [];\r\n            setTotalItems(listaTarefas.length);\r\n\r\n            //começa na posicao array 0\r\n            setTarefas(listaTarefas.splice((paginaAtual-1) * ITENS_POR_PAG, ITENS_POR_PAG));\r\n            \r\n\r\n            //console.log('teste');\r\n            //console.log(listarTarefas);\r\n        }\r\n        //se nao for carregado, carregue!!\r\n        if(carregarTarefas){\r\n            obterTarefas();\r\n            setCarregarTarefas(false);\r\n        }\r\n    }, [carregarTarefas, paginaAtual]); //vai ficar escutando também o página atual\r\n    //seja chamado apenas qdo algum state trabalhe com ele, qdo esse\r\n    //estado seja alterado\r\n\r\n\r\n    function handleMudarPagina(pagina){\r\n        setPaginaAtual(pagina);\r\n        setCarregarTarefas(true);\r\n    }\r\n\r\n\r\n    function handleOrdenar(event){\r\n        ///sempre q clicar no link de tarefas, atualiza a ordenacao e chama o setCarregarTarefas\r\n        event.preventDefault(); //só utilizar o comportamento do click\r\n        if(!ordenarAsc && !ordenarDesc){\r\n            setOrdernarAsc(true);\r\n            setOrdernarDesc(false);\r\n        }else if(ordenarAsc){\r\n            setOrdernarAsc(false);\r\n            setOrdernarDesc(true);\r\n        }else{\r\n            setOrdernarAsc(false);\r\n            setOrdernarDesc(false);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"text-center\">\r\n            <h3>Tarefas a fazer</h3>\r\n            <Table striped bordered hover responsive data-testid=\"tabela\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            <a href=\"/\"  onClick={handleOrdenar} >\r\n                                Tarefa\r\n                            </a>\r\n                        </th>\r\n                        <th><A href=\"/cadastrar\" className=\"btn btn-success btn-sm\" data-testid=\"btn-nova-tarefa\">\r\n                                <FontAwesomeIcon icon={faPlus} />\r\n                                &nbsp;\r\n                                Nova Tarefa\r\n                            </A>\r\n                         </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <ItensListaTarefas tarefas={tarefas} recarregarTarefas={setCarregarTarefas}/>\r\n                </tbody>\r\n            </Table>\r\n\r\n\r\n            <Paginacao \r\n                totalItems={totalItems}\r\n                itemsPorPagina={ITENS_POR_PAG}\r\n                paginaAtual={paginaAtual}\r\n                mudarPagina={handleMudarPagina}\r\n            />\r\n\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default ListarTarefas;"]},"metadata":{},"sourceType":"module"}