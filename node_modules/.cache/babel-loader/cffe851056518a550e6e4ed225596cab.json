{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react-udemy\\\\src\\\\atualizar\\\\atualizar-tarefa.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Jumbotron, Modal } from 'react-bootstrap';\nimport { navigate, A } from 'hookrouter';\n\nfunction AtualizarTarefa(props) {\n  _s();\n\n  const [exibirModal, setExibirModal] = useState(false);\n  const [formValidado, setFormValidado] = useState(false);\n  const [tarefa, setTarefa] = useState('');\n  const [carregarTarefa, setCarregarTarefa] = useState(true);\n\n  function voltar(event) {\n    event.preventDefault();\n    navigate('/');\n  }\n\n  function handleFecharModal() {\n    navigate('/');\n  }\n\n  function atualizar(event) {\n    event.preventDefault();\n    setFormValidado(true);\n\n    if (event.currentTarget.checkValidity()) {\n      //obter as tarefas\n      //persistir a tarefa atualziada\n      setExibirModal(true);\n    }\n  }\n\n  function handleTxtTarefa(event) {\n    setTarefa(event.target.value); //o valor do txt\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: \"Atualizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: atualizar,\n        noValidate: true,\n        validated: formValidado,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Tarefa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Digite a tarefa\",\n            minLength: \"5\",\n            maxLength: \"100\",\n            required: true,\n            \"data-testid\": \"txt-tarefa\",\n            value: tarefa,\n            onChange: handleTxtTarefa\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"A tarefa deve conter ao menos 5 caracteres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"submit\",\n            \"data-testid\": \"btn-atualizar\",\n            children: \"Atualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(A, {\n            href: \"/\",\n            className: \"btn btn-light\",\n            onClick: voltar,\n            children: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: exibirModal,\n        onHide: handleFecharModal,\n        \"data-testid\": \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Sucesso \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: \"Tarefa atualizado com sucesso!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: handleFecharModal,\n            children: \"Continuar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AtualizarTarefa, \"KWwCqPmiewdRYQjO48EuJEGGq/g=\");\n\n_c = AtualizarTarefa;\nAtualizarTarefa.propTypes = {\n  id: PropTypes.number.isRequired\n};\nexport default AtualizarTarefa;\n\nvar _c;\n\n$RefreshReg$(_c, \"AtualizarTarefa\");","map":{"version":3,"sources":["C:/xampp/htdocs/react-udemy/src/atualizar/atualizar-tarefa.js"],"names":["React","useState","useEffect","PropTypes","Button","Form","Jumbotron","Modal","navigate","A","AtualizarTarefa","props","exibirModal","setExibirModal","formValidado","setFormValidado","tarefa","setTarefa","carregarTarefa","setCarregarTarefa","voltar","event","preventDefault","handleFecharModal","atualizar","currentTarget","checkValidity","handleTxtTarefa","target","value","propTypes","id","number","isRequired"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Form, Jumbotron, Modal} from 'react-bootstrap';\r\nimport {navigate, A} from 'hookrouter';\r\n\r\n\r\nfunction AtualizarTarefa(props) {\r\n\r\n    const [exibirModal, setExibirModal] = useState(false);\r\n    const [formValidado, setFormValidado] = useState(false);\r\n    const [tarefa, setTarefa] = useState('');\r\n    const [carregarTarefa, setCarregarTarefa] = useState(true);\r\n    \r\n\r\n\r\n\r\n    function voltar(event){\r\n        event.preventDefault();\r\n        navigate('/');\r\n    }\r\n\r\n    function handleFecharModal(){\r\n        navigate('/');\r\n    }\r\n\r\n    function atualizar(event){\r\n        event.preventDefault();\r\n        setFormValidado(true);\r\n        if(event.currentTarget.checkValidity()){\r\n            //obter as tarefas\r\n\r\n\r\n            //persistir a tarefa atualziada\r\n\r\n\r\n            setExibirModal(true);\r\n        }\r\n\r\n    }\r\n\r\n    function handleTxtTarefa(event){\r\n        setTarefa(event.target.value);\r\n        //o valor do txt\r\n    }\r\n\r\n    return (\r\n    \r\n        <div>\r\n            <h3 className=\"text-center\">Atualizar</h3>\r\n            <Jumbotron>\r\n                <Form onSubmit={atualizar} noValidate validated={formValidado}>\r\n                    <Form.Group>\r\n                        <Form.Label>Tarefa</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Digite a tarefa\"\r\n                            minLength=\"5\" maxLength=\"100\" required data-testid=\"txt-tarefa\" value={tarefa} onChange={handleTxtTarefa}>\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            A tarefa deve conter ao menos 5 caracteres\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"text-center\">\r\n                        <Button variant=\"success\" type=\"submit\" data-testid=\"btn-atualizar\">\r\n                            Atualizar\r\n                        </Button>\r\n                        &nbsp;\r\n                        <A href=\"/\" className=\"btn btn-light\" onClick={voltar}>\r\n                            Voltar\r\n                        </A>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                <Modal show={exibirModal} onHide={handleFecharModal} data-testid=\"modal\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Sucesso </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Tarefa atualizado com sucesso!\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"success\" onClick={handleFecharModal}>\r\n                            Continuar\r\n                        </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\nAtualizarTarefa.propTypes={\r\n    id: PropTypes.number.isRequired\r\n}\r\n\r\nexport default AtualizarTarefa;"]},"metadata":{},"sourceType":"module"}